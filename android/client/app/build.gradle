apply plugin: 'com.google.protobuf'
apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.0"

    defaultConfig {
        applicationId "nmsl.rwfl"
        // API level 14+ is required for TLS since Google Play Services v10.2
        minSdkVersion 26
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
        }
        quality_assurance {
            debuggable true
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }


    dataBinding {
        enabled = true
    }

    aaptOptions {
        noCompress "tflite"
    }

    lintOptions {
        disable 'GoogleAppIndexingWarning', 'HardcodedText', 'InvalidPackage'
        textReport true
        textOutput "stdout"
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude("META-INF/*.kotlin_module")
    }
}

protobuf {
    protoc {
//        artifact = 'com.google.protobuf:protoc:3.11.0'
        artifact = 'com.google.protobuf:protoc:3.17.3'

    }
    plugins {
        grpc {
//            artifact = 'io.grpc:protoc-gen-grpc-java:1.27.2' // CURRENT_GRPC_VERSION
            artifact = 'io.grpc:protoc-gen-grpc-java:1.45.1' // CURRENT_GRPC_VERSION
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java { option 'lite' }
            }
            task.plugins {
                grpc { // Options added to --grpc_out
                    option 'lite' }
            }
        }
    }
}


dependencies {
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.firebase:firebase-crashlytics-buildtools:2.9.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation project(path: ':transfer_api')

    implementation 'org.tensorflow:tensorflow-lite:0.0.0-nightly-SNAPSHOT'
    // This dependency adds the necessary TF op support.
    // implementation 'org.tensorflow:tensorflow-lite-select-tf-ops:0.0.0-nightly-SNAPSHOT'
    implementation 'org.tensorflow:tensorflow-lite-select-tf-ops:0.0.0-nightly-SNAPSHOT'

//    implementation 'io.grpc:grpc-okhttp:1.27.2' // CURRENT_GRPC_VERSION
//    implementation 'io.grpc:grpc-protobuf-lite:1.27.2' // CURRENT_GRPC_VERSION
//    implementation 'io.grpc:grpc-stub:1.27.2' // CURRENT_GRPC_VERSION
    implementation 'io.grpc:grpc-okhttp:1.45.1' // CURRENT_GRPC_VERSION
    implementation 'io.grpc:grpc-protobuf-lite:1.45.1' // CURRENT_GRPC_VERSION
    implementation 'io.grpc:grpc-stub:1.45.1' // CURRENT_GRPC_VERSION
    implementation 'javax.annotation:javax.annotation-api:1.2'
    implementation 'com.google.code.gson:gson:2.8.7'

    // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpmime
    implementation group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.3.1'


    // implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'

    def lifecycle_version = '2.1.0-rc01'
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    implementation 'com.google.android.material:material:1.0.0'

    // Import the Firebase BoM
    implementation platform('com.google.firebase:firebase-bom:30.3.0')

    // When using the BoM, you don't specify versions in Firebase library dependencies

    // Declare the dependencies for the desired Firebase products
    // For example, declare the dependencies for Firebase Authentication and Cloud Firestore
    implementation 'com.google.firebase:firebase-messaging'
//    implementation 'com.google.firebase:firebase-auth'
//    implementation 'com.google.firebase:firebase-firestore'
}

def modelUrl = 'http://143.248.36.213:8998/femnist128/model.zip'
def modelArchivePath = "${buildDir}/model.zip"
def modelTargetLocation = 'src/main/assets/'


def dataUrl = 'http://143.248.36.213:8998/femnist128/data.zip'
def dataArchivePath = "${buildDir}/data.zip"
def dataTargetLocation = 'src/main/assets/'

//task downloadModelAndData(type: DefaultTask) {
//    doFirst {
//        println "Downloading and unpacking the model..."
//        mkdir project.buildDir
//    }
//
//    doLast {
//        ant.mkdir(dir: modelTargetLocation)
//        ant.mkdir(dir: dataTargetLocation)
//
//        // If you want to use your own models rather than pre-built models,
//        // comment out the following three lines.
//        ant.get(src: modelUrl, dest: modelArchivePath)
//        ant.unzip(src: modelArchivePath, dest: modelTargetLocation)
//        ant.delete(file: modelArchivePath)
//
////        ant.get(src: dataUrl, dest: dataArchivePath)
////        ant.unzip(src: dataArchivePath, dest: dataTargetLocation)
////        ant.delete(file: dataArchivePath)
//
//    }
//}
//
//preBuild.dependsOn downloadModelAndData
